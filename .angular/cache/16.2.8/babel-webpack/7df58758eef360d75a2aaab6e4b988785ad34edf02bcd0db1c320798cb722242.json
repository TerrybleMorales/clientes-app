{"ast":null,"code":"import { Cliente } from './cliente';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class FormComponent {\n  constructor(clienteService, router, activatedRoute) {\n    this.clienteService = clienteService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.cliente = new Cliente();\n    this.titulo = \"Crear Cliente\";\n  }\n  ngOnInit() {\n    this.cargarCliente();\n  }\n  cargarCliente() {\n    this.activatedRoute.params.subscribe(params => {\n      let id = params['id'];\n      if (id) {\n        this.clienteService.getCliente(id).subscribe(cliente => this.cliente = cliente);\n      }\n    });\n  }\n  create() {\n    this.clienteService.create(this.cliente).subscribe(cliente => {\n      this.router.navigate(['/clientes']);\n      Swal.fire('Nuevo cliente', `Cliente ${cliente.nombre} Creado con éxito!`);\n    });\n  }\n  static #_ = this.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"card\", \"bg-dark\", \"text-white\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"nombre\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"name\", \"nombre\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"apellido\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"apellido\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"role\", \"button\", 1, \"btn\", \"btn-primary\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.create();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.cliente.nombre = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Apellido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.cliente.apellido = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 6)(19, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.cliente.email = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 4)(21, \"div\", 6)(22, \"button\", 12);\n        i0.ɵɵtext(23, \"Crear\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.titulo);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.nombre);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.apellido);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.email);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Cliente","Swal","FormComponent","constructor","clienteService","router","activatedRoute","cliente","titulo","ngOnInit","cargarCliente","params","subscribe","id","getCliente","create","navigate","fire","nombre","_","i0","ɵɵdirectiveInject","i1","ClienteService","i2","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FormComponent_Template_form_ngSubmit_4_listener","FormComponent_Template_input_ngModelChange_9_listener","$event","FormComponent_Template_input_ngModelChange_14_listener","apellido","FormComponent_Template_input_ngModelChange_19_listener","email","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\form.component.ts","C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Cliente } from './cliente';\nimport { ClienteService } from './cliente.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2'\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n})\nexport class FormComponent implements OnInit {\n   cliente: Cliente = new Cliente()\n  titulo:string = \"Crear Cliente\"\n\n\n  constructor(private clienteService: ClienteService, \n    private router: Router,\n    private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.cargarCliente()\n  }\n\n  cargarCliente(): void {\n    this.activatedRoute.params.subscribe(params => {\n      let id = params ['id']\n      if (id){\n        this.clienteService.getCliente(id).subscribe((cliente) => this.cliente = cliente)\n      }\n    })\n\n  }\n\n  create(): void{\n    this.clienteService.create(this.cliente).subscribe(\n      cliente => {\n        this.router.navigate(['/clientes'])\n        Swal.fire('Nuevo cliente',  `Cliente ${cliente.nombre} Creado con éxito!`)\n      }\n    );\n      \n  }\n\n}\n","<div class=\"card bg-dark text-white\">\n<div class=\"card-header\">{{titulo}}</div>\n<div class=\"card-body\">\n\n    <form (ngSubmit)=\"create()\">\n        <div class=\"form-group row\">\n            <label for=\"nombre\" class=\"col-form-label col-sm-2\">Nombre</label>\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nombre\" name=\"nombre\">\n                </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"apellido\" class=\"col-form-label col-sm-2\">Apellido</label>\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.apellido\" name=\"apellido\">\n                </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"email\" class=\"col-form-label col-sm-2\">Email</label>\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.email\" name=\"email\">\n                </div>\n           </div>\n        \n        <div class=\"form-group row\">\n            <div class=\"col-sm-6\">\n                <button class=\"btn btn-primary\" role=\"button\">Crear</button>\n            </div>\n        </div>\n    </form>\n\n\n</div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}