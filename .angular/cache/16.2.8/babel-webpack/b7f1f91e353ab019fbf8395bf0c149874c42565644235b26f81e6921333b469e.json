{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(http) {\n    this.http = http;\n    this.urlEndpoint = 'http://localhost:8080/api/clientes';\n    this.httpHeaders = new HttpHeaders({\n      'Contente-Type': 'application/json'\n    });\n  }\n  getClientes() {\n    //return of (CLIENTES);\n    return this.http.get(this.urlEndpoint).pipe(map(response => response));\n  }\n  create(cliente) {\n    return this.http.post(this.urlEndpoint, cliente, {\n      headers: this.httpHeaders\n    });\n  }\n  static #_ = this.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","map","ClienteService","constructor","http","urlEndpoint","httpHeaders","getClientes","get","pipe","response","create","cliente","post","headers","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CLIENTES } from './clientes.json';\nimport { Cliente } from './cliente';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ClienteService {\n  private urlEndpoint:string = 'http://localhost:8080/api/clientes';\n\n  private httpHeaders = new HttpHeaders({'Contente-Type' : 'application/json'})\n  constructor( private http: HttpClient) { }\n\n  getClientes(): Observable<Cliente[]> { \n      //return of (CLIENTES);\n      return this.http.get(this.urlEndpoint).pipe(\n        map(response => response as Cliente)\n      );\n  }\n\n  create(cliente: Cliente) : Observable<Cliente> {\n    return this.http.post<Cliente>(this.urlEndpoint, cliente, {headers: this.httpHeaders})\n  }\n}\n"],"mappings":"AAKA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,GAAG,QAAQ,gBAAgB;;;AAGpC,OAAM,MAAOC,cAAc;EAIzBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHjB,KAAAC,WAAW,GAAU,oCAAoC;IAEzD,KAAAC,WAAW,GAAG,IAAIN,WAAW,CAAC;MAAC,eAAe,EAAG;IAAkB,CAAC,CAAC;EACpC;EAEzCO,WAAWA,CAAA;IACP;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,WAAW,CAAC,CAACI,IAAI,CACzCR,GAAG,CAACS,QAAQ,IAAIA,QAAmB,CAAC,CACrC;EACL;EAEAC,MAAMA,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,IAAI,CAACR,WAAW,EAAEO,OAAO,EAAE;MAACE,OAAO,EAAE,IAAI,CAACR;IAAW,CAAC,CAAC;EACxF;EAAC,QAAAS,CAAA,G;qBAfUb,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdlB,cAAc;IAAAmB,OAAA,EAAdnB,cAAc,CAAAoB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}