{"ast":null,"code":"import swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction ClientesComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" No hay registros en la base de datos! \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/clientes/form\", a1];\n};\nfunction ClientesComponent_table_10_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 11);\n    i0.ɵɵtext(13, \"editar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ClientesComponent_table_10_tr_18_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const cliente_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.delete(cliente_r3));\n    });\n    i0.ɵɵtext(16, \"elimnar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cliente_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r3.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r3.apellido);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r3.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r3.createAt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, cliente_r3.id));\n  }\n}\nfunction ClientesComponent_table_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 9)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"fecha\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \" editar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"eliminar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"tbody\");\n    i0.ɵɵtemplate(18, ClientesComponent_table_10_tr_18_Template, 17, 8, \"tr\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.clientes);\n  }\n}\nconst _c1 = function () {\n  return [\"/clientes/form\"];\n};\nexport class ClientesComponent {\n  constructor(clienteService) {\n    this.clienteService = clienteService;\n  }\n  ngOnInit() {\n    this.clienteService.getClientes().subscribe(clientes => this.clientes = clientes);\n  }\n  delete(cliente) {\n    const swalWithBootstrapButtons = swal.mixin({\n      customClass: {\n        confirmButton: \"btn btn-success\",\n        cancelButton: \"btn btn-danger\"\n      },\n      buttonsStyling: false\n    });\n    swalWithBootstrapButtons.fire({\n      title: 'Esta seguro?',\n      text: `¿Seguro que desea eliminar al cliente ${cliente.nombre} ${cliente.apellido}?`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: 'Si, eliminar!',\n      cancelButtonText: 'No, cancelar!',\n      reverseButtons: true\n    }).then(result => {\n      if (result.value) {\n        this.clienteService.delete(cliente.id).subscribe(response => {\n          this.clientes = this.clientes?.filter(cli => cli !== cliente);\n          swalWithBootstrapButtons.fire({\n            title: 'Cliente Eliminado!',\n            text: `Cliente ${cliente.nombre} eliminado con éxito`,\n            icon: \"success\"\n          });\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ClientesComponent_Factory(t) {\n    return new (t || ClientesComponent)(i0.ɵɵdirectiveInject(i1.ClienteService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientesComponent,\n    selectors: [[\"app-clientes\"]],\n    decls: 11,\n    vars: 4,\n    consts: [[1, \"card\", \"border-primary\", \"mb-3\"], [1, \"card-header\"], [1, \"card-body\", \"text-primary\"], [1, \"card-title\"], [1, \"my-2\", \"text-left\"], [\"type\", \"button\", 1, \"btn\", \"btn-rounded\", \"btn-primary\", 3, \"routerLink\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"class\", \"table table-bordered table-striped\", 4, \"ngIf\"], [1, \"alert\", \"alert-info\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"name\", \"editar\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"type\", \"button\", \"name\", \"eliminar\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n    template: function ClientesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Clientes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"h5\", 3);\n        i0.ɵɵtext(5, \"Listado de clientes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"button\", 5);\n        i0.ɵɵtext(8, \"Crear Cliente\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, ClientesComponent_div_9_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(10, ClientesComponent_table_10_Template, 19, 1, \"table\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c1));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.clientes == null ? null : ctx.clientes.length) == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.clientes == null ? null : ctx.clientes.length) > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ClientesComponent_table_10_tr_18_Template_button_click_15_listener","restoredCtx","ɵɵrestoreView","_r5","cliente_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","delete","ɵɵadvance","ɵɵtextInterpolate","id","nombre","apellido","email","createAt","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵtemplate","ClientesComponent_table_10_tr_18_Template","ctx_r1","clientes","ClientesComponent","constructor","clienteService","ngOnInit","getClientes","subscribe","cliente","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","value","response","filter","cli","_","ɵɵdirectiveInject","i1","ClienteService","_2","selectors","decls","vars","consts","template","ClientesComponent_Template","rf","ctx","ClientesComponent_div_9_Template","ClientesComponent_table_10_Template","ɵɵpureFunction0","_c1","length"],"sources":["C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\clientes.component.ts","C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\clientes.component.html"],"sourcesContent":["import { Component, OnInit, numberAttribute} from '@angular/core';\nimport { Cliente } from './cliente';\nimport { ClienteService } from './cliente.service';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n})\n\nexport class ClientesComponent implements OnInit {\n\n  clientes?: Cliente[];\n\n  constructor(private clienteService: ClienteService) { }\n\n\n\nngOnInit () { \n  this.clienteService.getClientes().subscribe(\n    clientes => this.clientes = clientes\n  );\n}\n \n\ndelete(cliente: Cliente): void {\n\n  const swalWithBootstrapButtons = swal.mixin({\n    customClass: {\n      confirmButton: \"btn btn-success\",\n      cancelButton: \"btn btn-danger\"\n    },\n    buttonsStyling: false\n  });\n  swalWithBootstrapButtons.fire({\n    title: 'Esta seguro?',\n    text: `¿Seguro que desea eliminar al cliente ${cliente.nombre} ${cliente.apellido}?`,\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonText: 'Si, eliminar!',\n    cancelButtonText: 'No, cancelar!',\n    reverseButtons: true\n  }).then((result) => {\n    if (result.value) {\n\n      this.clienteService.delete(cliente.id as number).subscribe(\n        response => {\n\n          this.clientes = this.clientes?.filter(cli => cli !== cliente)\n\n          swalWithBootstrapButtons.fire({\n            title: 'Cliente Eliminado!',\n            text: `Cliente ${cliente.nombre} eliminado con éxito`, \n            icon: \"success\"\n          });\n      \n        }\n      )\n      \n    } \n  });\n\n}\n\n}\n","<div class=\"card border-primary mb-3\">\n    <div class=\"card-header\">Clientes</div>\n    <div class=\"card-body text-primary\">\n      <h5 class=\"card-title\">Listado de clientes</h5>\n\n      <div class=\"my-2 text-left\">\n        <button class=\"btn btn-rounded btn-primary\" type=\"button\" [routerLink]=\"['/clientes/form']\">Crear Cliente</button>\n      </div> \n      <div *ngIf=\"clientes?.length! == 0\" class=\"alert alert-info\">\n        No hay registros en la base de datos!\n\n      </div>\n        <table class=\"table table-bordered table-striped\" *ngIf=\"clientes?.length!>0\">\n            <thead>\n                <tr>\n                    <th>id</th>\n                    <th>nombre</th>\n                    <th>apellido</th>\n                    <th>email</th>\n                    <th>fecha</th>\n                    <th>\n                       editar \n                    </th>\n                    <th>eliminar</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let cliente of clientes\">\n                    <td>{{ cliente.id }}</td>\n                    <td>{{ cliente.nombre }}</td>\n                    <td>{{ cliente.apellido }}</td>\n                    <td>{{ cliente.email }}</td>\n                    <td>{{ cliente.createAt }}</td>\n                    <td>\n                        <button type=\"button\" name=\"editar\" [routerLink]=\"['/clientes/form', cliente.id]\" class=\"btn btn-primary\">editar</button>\n                    </td>\n                    <td>\n                        <button type=\"button\" name=\"eliminar\" (click)='delete(cliente)' class=\"btn btn-danger btn-sm\">elimnar</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    \n    \n    \n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}