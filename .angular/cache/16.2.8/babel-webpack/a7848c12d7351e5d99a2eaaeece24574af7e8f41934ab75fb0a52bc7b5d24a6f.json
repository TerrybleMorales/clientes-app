{"ast":null,"code":"import { formatDate } from '@angular/common';\nimport { throwError } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ClienteService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.urlEndpoint = 'http://localhost:8080/api/clientes';\n    this.httpHeaders = new HttpHeaders({\n      'Contente-Type': 'application/json'\n    });\n  }\n  getClientes() {\n    //return of (CLIENTES);\n    return this.http.get(this.urlEndpoint).pipe(map(response => {\n      let clientes = response;\n      return clientes.map(cliente => {\n        cliente.nombre = cliente.nombre?.toUpperCase();\n        cliente.createAt = formatDate(cliente.createAt, 'fullDate', 'en_US');\n        return cliente;\n      });\n    }));\n  }\n  create(cliente) {\n    return this.http.post(this.urlEndpoint, cliente, {\n      headers: this.httpHeaders\n    }).pipe(map(response => response.cliente), catchError(error => {\n      if (error.status == 400) {\n        return throwError(() => error);\n      }\n      console.error(error.errors.mensaje);\n      Swal.fire(error.error.mensaje, error.error.error, 'error');\n      return throwError(() => error);\n    }));\n  }\n  getCliente(id) {\n    return this.http.get(`${this.urlEndpoint}/${id}`).pipe(catchError(error => {\n      this.router.navigate(['/clientes']);\n      console.error(error.error.mensaje);\n      Swal.fire('Error al editar', error.error.mensaje, 'error');\n      return throwError(() => error);\n    }));\n  }\n  update(cliente) {\n    return this.http.put(`${this.urlEndpoint}/${cliente.id}`, cliente, {\n      headers: this.httpHeaders\n    }).pipe(catchError(error => {\n      if (error.status == 400) {\n        return throwError(() => error);\n      }\n      this.router.navigate(['/clientes']);\n      console.error(error.error.mensaje);\n      Swal.fire(error.error.mensaje, error.error.error, 'error');\n      return throwError(() => error);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${this.urlEndpoint}/${id}`, {\n      headers: this.httpHeaders\n    }).pipe(catchError(error => {\n      this.router.navigate(['/clientes']);\n      console.error(error.error.mensaje);\n      Swal.fire(error.error.mensaje, error.error.error, 'error');\n      return throwError(() => error);\n    }));\n  }\n  static #_ = this.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac\n  });\n}","map":{"version":3,"names":["formatDate","throwError","HttpHeaders","map","catchError","Swal","ClienteService","constructor","http","router","urlEndpoint","httpHeaders","getClientes","get","pipe","response","clientes","cliente","nombre","toUpperCase","createAt","create","post","headers","error","status","console","errors","mensaje","fire","getCliente","id","navigate","update","put","delete","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac"],"sources":["C:\\Users\\RUFI\\angular\\clientes-app\\src\\app\\clientes\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { CLIENTES } from './clientes.json';\nimport { Cliente } from './cliente';\nimport { of, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n\n\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ClienteService {\n  urlEndpoint:string = 'http://localhost:8080/api/clientes';\n\n httpHeaders = new HttpHeaders({'Contente-Type' : 'application/json'})\n  constructor( private http: HttpClient, private router: Router) { }\n\n  getClientes(): Observable<Cliente[]> { \n      //return of (CLIENTES);\n      return this.http.get<Cliente[]>(this.urlEndpoint).pipe(\n        map(response => {\n          let clientes = response as Cliente[];\n          return clientes.map(cliente => {\n            cliente.nombre = cliente.nombre?.toUpperCase();\n            cliente.createAt = formatDate(cliente.createAt!, 'fullDate', 'en_US');\n            return cliente;\n          });\n        }\n        )\n      );\n  }\n\n  create(cliente: Cliente) : Observable<Cliente> {\n    return this.http.post(this.urlEndpoint, cliente, {headers: this.httpHeaders}).pipe(\n      map( (response: any )=> response.cliente as Cliente), \n      catchError(error =>{\n\n\n        if(error.status==400){\n          return throwError(() => error);\n\n        }\n\n        console.error(error.errors.mensaje);\n        Swal.fire(error.error.mensaje, error.error.error, 'error');\n        return throwError(() => error);\n      })\n    );\n  }\n\n  getCliente(id:number): Observable<Cliente>{\n    return this.http.get<Cliente>(`${this.urlEndpoint}/${id}`).pipe(\n      catchError(error => {\n          this.router.navigate(['/clientes']);\n          console.error(error.error.mensaje);\n          Swal.fire('Error al editar', error.error.mensaje, 'error');\n          return throwError(() => error); \n      })\n    );\n  }\n\n  update(cliente: Cliente): Observable<any>{\n    return this.http.put<any>(`${this.urlEndpoint}/${cliente.id}`, cliente, {headers: this.httpHeaders}).pipe(\n      catchError(error => {\n\n        if (error.status==400){\n          return throwError(() => error);\n        }\n        this.router.navigate(['/clientes']);\n        console.error(error.error.mensaje);\n        Swal.fire(error.error.mensaje, error.error.error, 'error');\n        return throwError(() => error); \n    })\n    );\n  };\n\n  delete(id: number) : Observable<Cliente>{\n    return this.http.delete<Cliente>(`${this.urlEndpoint}/${id}`, {headers: this.httpHeaders}).pipe(\n      catchError(error => {\n        this.router.navigate(['/clientes']);\n        console.error(error.error.mensaje);\n        Swal.fire(error.error.mensaje, error.error.error, 'error');\n        return throwError(() => error); \n    })\n    );\n  };\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}