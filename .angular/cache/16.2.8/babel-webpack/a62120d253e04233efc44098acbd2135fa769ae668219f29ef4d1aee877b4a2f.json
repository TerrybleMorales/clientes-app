{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ClienteService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.urlEndpoint = 'http://localhost:8080/api/clientes';\n    this.httpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  getClientes(page) {\n    return this.http.get(this.urlEndpoint + '/page/' + page).pipe(tap(response => {\n      console.log('ClienteService: tap 1');\n      response.content.forEach(cliente => {\n        console.log(cliente.nombre);\n      });\n    }), map(response => {\n      response.content.map(cliente => {\n        cliente.nombre = cliente.nombre?.toUpperCase();\n        //let datePipe = new DatePipe('Es');\n        //cliente.createAt = formatDate(cliente.createAt!, 'EEEE dd, MMMM yyyy', 'Es');\n        return cliente;\n      });\n      return response;\n    }), tap(response => {\n      console.log('ClienteService: tap 2');\n      response.content.forEach(cliente => {\n        console.log(cliente.nombre);\n      });\n    }));\n  }\n  create(cliente) {\n    return this.http.post(this.urlEndpoint, cliente, {\n      headers: this.httpHeaders\n    }).pipe(map(response => response.cliente), catchError(error => {\n      if (error.status == 400) {\n        return throwError(() => error);\n      }\n      console.error(error.errors.mensaje);\n      Swal.fire(error.error.mensaje, error.error.error, 'error');\n      return throwError(() => error);\n    }));\n  }\n  getCliente(id) {\n    return this.http.get(`${this.urlEndpoint}/${id}`).pipe(catchError(error => {\n      this.router.navigate(['/clientes']);\n      console.error(error.error.mensaje);\n      Swal.fire('Error al editar', error.error.mensaje, 'error');\n      return throwError(() => error);\n    }));\n  }\n  update(cliente) {\n    return this.http.put(`${this.urlEndpoint}/${cliente.id}`, cliente, {\n      headers: this.httpHeaders\n    }).pipe(catchError(error => {\n      if (error.status == 400) {\n        return throwError(() => error);\n      }\n      this.router.navigate(['/clientes']);\n      console.error(error.error.mensaje);\n      Swal.fire(error.error.mensaje, error.error.error, 'error');\n      return throwError(() => error);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${this.urlEndpoint}/${id}`, {\n      headers: this.httpHeaders\n    }).pipe(catchError(error => {\n      this.router.navigate(['/clientes']);\n      console.error(error.error.mensaje);\n      Swal.fire(error.error.mensaje, error.error.error, 'error');\n      return throwError(() => error);\n    }));\n  }\n  static #_ = this.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac\n  });\n}","map":{"version":3,"names":["throwError","HttpHeaders","map","catchError","tap","Swal","ClienteService","constructor","http","router","urlEndpoint","httpHeaders","getClientes","page","get","pipe","response","console","log","content","forEach","cliente","nombre","toUpperCase","create","post","headers","error","status","errors","mensaje","fire","getCliente","id","navigate","update","put","delete","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac"],"sources":["C:\\Users\\RUFI\\angular\\clientes-app\\src\\app\\clientes\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { formatDate, DatePipe} from '@angular/common';\n\nimport { CLIENTES } from './clientes.json';\nimport { Cliente } from './cliente';\nimport { of, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n\n\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ClienteService {\n  urlEndpoint:string = 'http://localhost:8080/api/clientes';\n\n httpHeaders = new HttpHeaders({'Content-Type' : 'application/json'});\n  constructor( private http: HttpClient, private router: Router) { }\n\n  getClientes(page: number): Observable<any> { \n      return this.http.get(this.urlEndpoint + '/page/' + page).pipe(\n        tap((response: any) => {\n          console.log('ClienteService: tap 1');\n          (response.content as Cliente[]).forEach(cliente =>{\n            console.log(cliente.nombre);\n          });\n        }), \n        map((response: any) => {\n          (response.content as Cliente[]).map(cliente => {\n            cliente.nombre = cliente.nombre?.toUpperCase();\n            //let datePipe = new DatePipe('Es');\n            //cliente.createAt = formatDate(cliente.createAt!, 'EEEE dd, MMMM yyyy', 'Es');\n            \n            return cliente;\n          });\n          return response;\n        }), \n        tap(response => {\n          console.log('ClienteService: tap 2');\n          (response.content as Cliente[]).forEach( cliente =>{\n            console.log(cliente.nombre);\n          });\n        })\n      );\n  }\n\n  create(cliente: Cliente) : Observable<Cliente> {\n    return this.http.post(this.urlEndpoint, cliente, {headers: this.httpHeaders}).pipe(\n      map( (response: any )=> response.cliente as Cliente), \n      catchError(error =>{\n\n\n        if(error.status==400){\n          return throwError(() => error);\n\n        }\n\n        console.error(error.errors.mensaje);\n        Swal.fire(error.error.mensaje, error.error.error, 'error');\n        return throwError(() => error);\n      })\n    );\n  }\n\n  getCliente(id:number): Observable<Cliente>{\n    return this.http.get<Cliente>(`${this.urlEndpoint}/${id}`).pipe(\n      catchError(error => {\n          this.router.navigate(['/clientes']);\n          console.error(error.error.mensaje);\n          Swal.fire('Error al editar', error.error.mensaje, 'error');\n          return throwError(() => error); \n      })\n    );\n  }\n\n  update(cliente: Cliente): Observable<any>{\n    return this.http.put<any>(`${this.urlEndpoint}/${cliente.id}`, cliente, {headers: this.httpHeaders}).pipe(\n      catchError(error => {\n\n        if (error.status==400){\n          return throwError(() => error);\n        }\n        this.router.navigate(['/clientes']);\n        console.error(error.error.mensaje);\n        Swal.fire(error.error.mensaje, error.error.error, 'error');\n        return throwError(() => error); \n    })\n    );\n  };\n\n  delete(id: number) : Observable<Cliente>{\n    return this.http.delete<Cliente>(`${this.urlEndpoint}/${id}`, {headers: this.httpHeaders}).pipe(\n      catchError(error => {\n        this.router.navigate(['/clientes']);\n        console.error(error.error.mensaje);\n        Swal.fire(error.error.mensaje, error.error.error, 'error');\n        return throwError(() => error); \n    })\n    );\n  };\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}