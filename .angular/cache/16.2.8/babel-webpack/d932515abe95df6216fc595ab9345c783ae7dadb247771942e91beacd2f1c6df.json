{"ast":null,"code":"import { Cliente } from './cliente';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./cliente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction FormComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function FormComponent_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.create());\n    });\n    i0.ɵɵtext(1, \"Crear\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function FormComponent_ng_template_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.update());\n    });\n    i0.ɵɵtext(1, \"Editar \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormComponent {\n  constructor(clienteService, router, activatedRoute) {\n    this.clienteService = clienteService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.cliente = new Cliente();\n    this.titulo = \"Crear Cliente\";\n  }\n  ngOnInit() {\n    this.cargarCliente();\n  }\n  cargarCliente() {\n    this.activatedRoute.params.subscribe(params => {\n      let id = params['id'];\n      if (id) {\n        this.clienteService.getCliente(id).subscribe(cliente => this.cliente = cliente);\n      }\n    });\n  }\n  create() {\n    this.clienteService.create(this.cliente).subscribe(cliente => {\n      this.router.navigate(['/clientes']);\n      Swal.fire('Nuevo cliente', `E cliente ${cliente.nombre} ha sido creado con éxito `, 'success');\n    });\n  }\n  update() {\n    this.clienteService.update(this.cliente).subscribe(json => {\n      this.router.navigate(['/clientes']);\n      Swal.fire('Nuevo cliente', ` ${json.mensaje}: ${json.cliente.nombre}`, 'success');\n    });\n  }\n  static #_ = this.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    decls: 25,\n    vars: 6,\n    consts: [[1, \"card\", \"bg-dark\", \"text-white\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"form-group\", \"row\"], [\"for\", \"nombre\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"name\", \"nombre\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"apellido\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"apellido\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"btn btn-primary\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"role\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\")(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.cliente.nombre = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Apellido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.cliente.apellido = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 9);\n        i0.ɵɵtext(17, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 5)(19, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.cliente.email = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"div\", 5);\n        i0.ɵɵtemplate(22, FormComponent_button_22_Template, 2, 0, \"button\", 11);\n        i0.ɵɵtemplate(23, FormComponent_ng_template_23_Template, 2, 0, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(24);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.titulo);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.nombre);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.apellido);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.cliente.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.cliente.id)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Cliente","Swal","i0","ɵɵelementStart","ɵɵlistener","FormComponent_button_22_Template_button_click_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","create","ɵɵtext","ɵɵelementEnd","FormComponent_ng_template_23_Template_button_click_0_listener","_r6","ctx_r5","update","FormComponent","constructor","clienteService","router","activatedRoute","cliente","titulo","ngOnInit","cargarCliente","params","subscribe","id","getCliente","navigate","fire","nombre","json","mensaje","_","ɵɵdirectiveInject","i1","ClienteService","i2","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","FormComponent_Template_input_ngModelChange_9_listener","$event","FormComponent_Template_input_ngModelChange_14_listener","apellido","FormComponent_Template_input_ngModelChange_19_listener","email","ɵɵtemplate","FormComponent_button_22_Template","FormComponent_ng_template_23_Template","ɵɵtemplateRefExtractor","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","_r1"],"sources":["C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\form.component.ts","C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Cliente } from './cliente';\nimport { ClienteService } from './cliente.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2'\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n})\nexport class FormComponent implements OnInit {\n   cliente: Cliente = new Cliente()\n  titulo:string = \"Crear Cliente\"\n\n\n  constructor(private clienteService: ClienteService, \n    private router: Router,\n    private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.cargarCliente()\n  }\n\n  cargarCliente(): void {\n    this.activatedRoute.params.subscribe(params => {\n      let id = params ['id']\n      if (id){\n        this.clienteService.getCliente(id).subscribe((cliente) => this.cliente = cliente)\n      }\n    })\n\n  }\n\n  create(): void{\n    this.clienteService.create(this.cliente).subscribe(\n      cliente => {\n        this.router.navigate(['/clientes'])\n        Swal.fire('Nuevo cliente', `E cliente ${cliente.nombre} ha sido creado con éxito `, 'success')\n      }\n    );\n      \n  }\n\n  update(): void {\n    this.clienteService.update(this.cliente).subscribe( \n      json => {\n      this.router.navigate(['/clientes'])\n      Swal.fire('Nuevo cliente', ` ${json.mensaje}: ${json.cliente.nombre}`, 'success')\n    \n    }\n    \n    )\n  }\n\n}\n","<div class=\"card bg-dark text-white\">\n<div class=\"card-header\">{{titulo}}</div>\n<div class=\"card-body\">\n\n    <form>\n        <div class=\"form-group row\">\n            <label for=\"nombre\" class=\"col-form-label col-sm-2\">Nombre</label>\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nombre\" name=\"nombre\">\n                </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"apellido\" class=\"col-form-label col-sm-2\">Apellido</label>\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.apellido\" name=\"apellido\">\n                </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"email\" class=\"col-form-label col-sm-2\">Email</label>\n                <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.email\" name=\"email\">\n                </div>\n           </div>\n        \n        <div class=\"form-group row\">\n            <div class=\"col-sm-6\">\n                <button class=\"btn btn-primary\" role=\"button\" (click)='create()' *ngIf=\"!cliente.id else elseBlock\">Crear</button>\n\n                <ng-template #elseBlock>\n\n                <button class=\"btn btn-primary\" role=\"button\" (click)='update()'>Editar </button>\n                </ng-template>\n            </div>\n        </div>\n    </form>\n\n\n</div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}