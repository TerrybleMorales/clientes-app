{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(http) {\n    this.http = http;\n    this.urlEndpoint = 'http://localhost:8080/api/clientes';\n    this.httpHeaders = new HttpHeaders({\n      'Contente-Type': 'application/json'\n    });\n  }\n  getClientes() {\n    //return of (CLIENTES);\n    return this.http.get(this.urlEndpoint);\n  }\n  create(cliente) {\n    return this.http.post(this.urlEndpoint, cliente, {\n      headers: this.httpHeaders\n    });\n  }\n  static #_ = this.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","ClienteService","constructor","http","urlEndpoint","httpHeaders","getClientes","get","create","cliente","post","headers","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\RUFI\\Rufi\\angular\\clientes-app\\src\\app\\clientes\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CLIENTES } from './clientes.json';\nimport { Cliente } from './cliente';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ClienteService {\n  private urlEndpoint:string = 'http://localhost:8080/api/clientes';\n\n  httpHeaders = new HttpHeaders({'Contente-Type' : 'application/json'})\n  constructor(private http: HttpClient) { }\n\n  getClientes(): Observable<Cliente[]> { \n      //return of (CLIENTES);\n      return this.http.get<Cliente[]>(this.urlEndpoint);\n  }\n\n  create(cliente: Cliente) : Observable<Cliente> {\n    return this.http.post<Cliente>(this.urlEndpoint, cliente, {headers: this.httpHeaders})\n  }\n}\n"],"mappings":"AAKA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,WAAW,GAAU,oCAAoC;IAEjE,KAAAC,WAAW,GAAG,IAAIL,WAAW,CAAC;MAAC,eAAe,EAAG;IAAkB,CAAC,CAAC;EAC7B;EAExCM,WAAWA,CAAA;IACP;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,WAAW,CAAC;EACrD;EAEAI,MAAMA,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,IAAI,CAACN,WAAW,EAAEK,OAAO,EAAE;MAACE,OAAO,EAAE,IAAI,CAACN;IAAW,CAAC,CAAC;EACxF;EAAC,QAAAO,CAAA,G;qBAbUX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdhB,cAAc;IAAAiB,OAAA,EAAdjB,cAAc,CAAAkB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}